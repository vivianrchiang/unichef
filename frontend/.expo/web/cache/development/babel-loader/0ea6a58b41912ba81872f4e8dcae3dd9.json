{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport TabThreeScreen from \"../screens/TabThreeScreen\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme\n  }, React.createElement(RootNavigator, null));\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: BottomTabNavigator,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    }\n  }), React.createElement(Stack.Group, {\n    screenOptions: {\n      presentation: 'modal'\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Modal\",\n    component: ModalScreen\n  })));\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return React.createElement(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    }\n  }, React.createElement(BottomTab.Screen, {\n    name: \"TabOne\",\n    component: TabOneScreen,\n    options: function options(_ref2) {\n      var navigation = _ref2.navigation;\n      return {\n        title: 'Recipe Feed',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color;\n          return React.createElement(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        },\n        headerRight: function headerRight() {\n          return React.createElement(Pressable, {\n            onPress: function onPress() {\n              return navigation.navigate('Modal');\n            },\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return {\n                opacity: pressed ? 0.5 : 1\n              };\n            }\n          }, React.createElement(FontAwesome, {\n            name: \"info-circle\",\n            size: 25,\n            color: Colors[colorScheme].text,\n            style: {\n              marginRight: 15\n            }\n          }));\n        }\n      };\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"TabTwo\",\n    component: TabTwoScreen,\n    options: {\n      title: 'Marketplace',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color;\n        return React.createElement(TabBarIcon, {\n          name: \"code\",\n          color: color\n        });\n      }\n    }\n  }), React.createElement(BottomTab.Screen, {\n    name: \"TabThree\",\n    component: TabThreeScreen,\n    options: {\n      title: 'Profile',\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var color = _ref6.color;\n        return React.createElement(TabBarIcon, {\n          name: \"code\",\n          color: color\n        });\n      }\n    }\n  }));\n}\n\nfunction TabBarIcon(props) {\n  return React.createElement(FontAwesome, _extends({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["/Users/karenyen/Documents/Senior Design/unichef/frontend/navigation/index.tsx"],"names":["FontAwesome","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","ModalScreen","NotFoundScreen","TabOneScreen","TabTwoScreen","TabThreeScreen","LinkingConfiguration","Navigation","colorScheme","Stack","RootNavigator","BottomTabNavigator","headerShown","title","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","tabBarIcon","color","headerRight","navigate","pressed","opacity","text","marginRight","TabBarIcon","props","marginBottom"],"mappings":"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","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport TabThreeScreen from '../screens/TabThreeScreen';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: 'Recipe Feed',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={Colors[colorScheme].text}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Marketplace',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"TabThree\"\n        component={TabThreeScreen}\n        options={{\n          title: 'Profile',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\n\n//  import { FontAwesome } from '@expo/vector-icons';\n//  import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n//  import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\n//  import { createNativeStackNavigator } from '@react-navigation/native-stack';\n//  import * as React from 'react';\n//  import { ColorSchemeName, Pressable } from 'react-native';\n \n//  import Colors from '../constants/Colors';\n//  import useColorScheme from '../hooks/useColorScheme';\n//  import ModalScreen from '../screens/ModalScreen';\n//  import NotFoundScreen from '../screens/NotFoundScreen';\n//  import TabOneScreen from '../screens/TabOneScreen';\n//  import TabTwoScreen from '../screens/TabTwoScreen';\n//  import TabThreeScreen from '../screens/TabThreeScreen';\n//  import VeggieFriedRiceScreen from '../screens/VeggieFriedRiceScreen';\n//  import VeggieFriedRiceReviewsScreen from '../screens/VeggieFriedRiceReviewsScreen';\n//  import KirbyMealsForSaleScreen from '../screens/KirbyMealsForSaleScreen';\n//  import KirbyRecipesScreen from '../screens/KirbyRecipesScreen';\n//  import { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\n//  import LinkingConfiguration from './LinkingConfiguration';\n \n//  export default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n//    return (\n//      <NavigationContainer\n//        linking={LinkingConfiguration}\n//        theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n//        <RootNavigator />\n//      </NavigationContainer>\n//    );\n//  }\n \n//  /**\n//   * A root stack navigator is often used for displaying modals on top of all other content.\n//   * https://reactnavigation.org/docs/modal\n//   */\n//  const Stack = createNativeStackNavigator<RootStackParamList>();\n \n//  function RootNavigator() {\n//    return (\n//      <Stack.Navigator>\n//        <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n//        <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n//        <Stack.Screen name=\"VeggieFriedRice\" component={VeggieFriedRiceScreen} />\n//        <Stack.Screen name=\"VeggieFriedRiceReviews\" component={VeggieFriedRiceReviewsScreen} />\n//        <Stack.Screen name=\"KirbyMealsForSale\" component={KirbyMealsForSaleScreen} />\n//        <Stack.Screen name=\"KirbyRecipes\" component={KirbyRecipesScreen} />\n//        <Stack.Group screenOptions={{ presentation: 'modal' }}>\n//          <Stack.Screen name=\"Modal\" component={ModalScreen} />\n//        </Stack.Group>\n//      </Stack.Navigator>\n//    );\n//  }\n \n//  /**\n//   * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n//   * https://reactnavigation.org/docs/bottom-tab-navigator\n//   */\n//  const BottomTab = createBottomTabNavigator<RootTabParamList>();\n \n//  function BottomTabNavigator() {\n//    const colorScheme = useColorScheme();\n \n//    return (\n//      <BottomTab.Navigator\n//        initialRouteName=\"TabOne\"\n//        screenOptions={{\n//          tabBarActiveTintColor: Colors[colorScheme].tint,\n//        }}>\n//        <BottomTab.Screen\n//          name=\"TabOne\"\n//          component={TabOneScreen}\n//          options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n//            title: 'Recipe Feed',\n//            tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//            headerRight: () => (\n//              <Pressable\n//                onPress={() => navigation.navigate('Modal')}\n//                style={({ pressed }) => ({\n//                  opacity: pressed ? 0.5 : 1,\n//                })}>\n//                <FontAwesome\n//                  name=\"info-circle\"\n//                  size={25}\n//                  color={Colors[colorScheme].text}\n//                  style={{ marginRight: 15 }}\n//                />\n//              </Pressable>\n//            ),\n//          })}\n//        />\n//        <BottomTab.Screen\n//          name=\"TabTwo\"\n//          component={TabTwoScreen}\n//          options={{\n//            title: 'Marketplace',\n//            tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//          }}\n//        />\n//        <BottomTab.Screen\n//          name=\"TabThree\"\n//          component={TabThreeScreen}\n//          options={{\n//            title: 'Profile',\n//            tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//          }}\n//        />\n//      </BottomTab.Navigator>\n//    );\n//  }\n \n//  /**\n//   * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n//   */\n//  function TabBarIcon(props: {\n//    name: React.ComponentProps<typeof FontAwesome>['name'];\n//    color: string;\n//  }) {\n//    return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n//  }"]},"metadata":{},"sourceType":"module"}