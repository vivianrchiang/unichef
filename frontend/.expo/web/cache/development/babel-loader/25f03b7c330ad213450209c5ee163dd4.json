{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { App } from \"../App\";\nimport registerRootComponent from 'expo/build/launch/registerRootComponent';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"../hooks/useCachedResources\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport Navigation from \"../navigation\";\nvar API_URL = 'http://localhost:5000';\nvar loggedIn = false;\nexport function varIsLogin() {\n  return loggedIn;\n}\n\nvar AuthScreen = function AuthScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isError = _useState8[0],\n      setIsError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      setMessage = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isLogin = _useState12[0],\n      setIsLogin = _useState12[1];\n\n  var onChangeHandler = function onChangeHandler() {\n    setIsLogin(!isLogin);\n    loggedIn = isLogin;\n    setMessage('HI' + loggedIn);\n  };\n\n  var onLoggedIn = function onLoggedIn(token) {\n    fetch(API_URL + \"/private\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + token\n      }\n    }).then(function _callee(res) {\n      var jsonRes;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 3:\n              jsonRes = _context.sent;\n\n              if (res.status === 200) {\n                setMessage(jsonRes.message);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n              ;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    var payload = {\n      email: email,\n      name: name,\n      password: password\n    };\n    fetch(API_URL + \"/\" + (isLogin ? 'login' : 'signup'), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(function _callee2(res) {\n      var jsonRes;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 3:\n              jsonRes = _context2.sent;\n\n              if (res.status !== 200) {\n                setIsError(true);\n                setMessage(jsonRes.message);\n              } else {\n                onLoggedIn(jsonRes.token);\n                setIsError(false);\n                setMessage(jsonRes.message);\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n              ;\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var getMessage = function getMessage() {\n    var status = isError ? \"Error: \" : \"Success: \";\n    return status + message;\n  };\n\n  return React.createElement(ImageBackground, {\n    source: {\n      uri: 'https://wallpapercave.com/wp/wp8279629.jpg'\n    },\n    style: styles.image\n  }, React.createElement(View, {\n    style: styles.card\n  }, React.createElement(Text, {\n    style: styles.heading\n  }, isLogin ? 'Unichef Login' : 'Unichef Signup'), React.createElement(View, {\n    style: styles.form\n  }, React.createElement(View, {\n    style: styles.inputs\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    onChangeText: setEmail\n  }), !isLogin && React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Name\",\n    onChangeText: setName\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: setPassword\n  }), React.createElement(Text, {\n    style: [styles.message, {\n      color: isError ? 'red' : 'green'\n    }]\n  }, message ? getMessage() : null), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onSubmitHandler\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Forgot Password\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonAlt,\n    onPress: onChangeHandler\n  }, React.createElement(Text, {\n    style: styles.buttonAltText\n  }, isLogin ? 'Log In' : 'Sign Up'))))));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center'\n  },\n  card: {\n    flex: 1,\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\n    width: '80%',\n    marginTop: '5%',\n    marginBottom: '20%',\n    borderRadius: 20,\n    maxHeight: 500,\n    paddingBottom: '10%'\n  },\n  heading: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginLeft: '10%',\n    marginTop: '5%',\n    marginBottom: '30%',\n    color: 'black'\n  },\n  form: {\n    flex: 1,\n    justifyContent: 'space-between',\n    paddingBottom: '5%'\n  },\n  inputs: {\n    width: '100%',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: '10%'\n  },\n  input: {\n    width: '80%',\n    borderBottomWidth: 1,\n    borderBottomColor: 'black',\n    paddingTop: 10,\n    fontSize: 16,\n    minHeight: 40\n  },\n  button: {\n    width: '80%',\n    backgroundColor: 'black',\n    height: 40,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '400'\n  },\n  buttonAlt: {\n    width: '80%',\n    borderWidth: 1,\n    height: 40,\n    borderRadius: 50,\n    borderColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonAltText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: '400'\n  },\n  message: {\n    fontSize: 16,\n    marginVertical: '5%'\n  }\n});\nexport default AuthScreen;","map":{"version":3,"sources":["/Users/karenyen/Documents/Senior Design/unichef/frontend/screens/AuthScreen.js"],"names":["React","useState","App","registerRootComponent","StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","API_URL","loggedIn","varIsLogin","AuthScreen","email","setEmail","name","setName","password","setPassword","isError","setIsError","message","setMessage","isLogin","setIsLogin","onChangeHandler","onLoggedIn","token","fetch","method","headers","then","res","json","jsonRes","status","console","log","catch","err","onSubmitHandler","payload","body","JSON","stringify","getMessage","uri","styles","image","card","heading","form","inputs","input","color","button","buttonText","buttonAlt","buttonAltText","StyleSheet","create","flex","width","height","alignItems","backgroundColor","marginTop","marginBottom","borderRadius","maxHeight","paddingBottom","fontSize","fontWeight","marginLeft","justifyContent","paddingTop","borderBottomWidth","borderBottomColor","minHeight","marginVertical","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { ImageBackground, View, Text, StyleSheet, TouchableOpacity, TextInput, Platform } from 'react-native';\nimport {App} from '../App';\nimport registerRootComponent from 'expo/build/launch/registerRootComponent';\n\nimport { StatusBar } from 'expo-status-bar';\n\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from '../hooks/useCachedResources';\nimport useColorScheme from '../hooks/useColorScheme';\nimport Navigation from '../navigation';\n\n\nconst API_URL = 'http://localhost:5000';\nvar loggedIn = false; \nexport function varIsLogin() {\n    return loggedIn;\n  }\n\n\nconst AuthScreen = () => {\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [isError, setIsError] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLogin, setIsLogin] = useState(true);\n\n\n    const onChangeHandler = () => {\n       \n        setIsLogin(!isLogin);\n        loggedIn = isLogin;\n        setMessage('HI' + loggedIn);\n        //registerRootComponent(App);\n        //App();\n\n//        const isLoadingComplete = useCachedResources();\n//   const colorScheme = useColorScheme();\n\n//   if (!isLoadingComplete) {\n//     return null;\n//   } else {\n//     return (\n//       <SafeAreaProvider>\n//         <Navigation colorScheme={colorScheme} />\n//         <StatusBar />\n//       </SafeAreaProvider>\n//     );\n//   }\n\n            \n    };\n\n    const onLoggedIn = token => {\n        fetch(`${API_URL}/private`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`, \n            },\n        })\n        .then(async res => { \n            try {\n                const jsonRes = await res.json();\n                if (res.status === 200) {\n                    setMessage(jsonRes.message);\n                }\n            } catch (err) {\n                console.log(err);\n            };\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const onSubmitHandler = () => {\n        const payload = {\n            email,\n            name,\n            password,\n        };\n        fetch(`${API_URL}/${isLogin ? 'login' : 'signup'}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(payload),\n        })\n        .then(async res => { \n            try {\n                const jsonRes = await res.json();\n                if (res.status !== 200) {\n                    setIsError(true);\n                    setMessage(jsonRes.message);\n                } else {\n                    onLoggedIn(jsonRes.token);\n                    setIsError(false);\n                    setMessage(jsonRes.message);\n                }\n            } catch (err) {\n                console.log(err);\n            };\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    };\n\n    const getMessage = () => {\n        const status = isError ? `Error: ` : `Success: `;\n        return status + message;\n    }\n\n    // return (\n    //     <ImageBackground source={require('../public/images/gradient-back.jpeg')} style={styles.image}>\n    //         <View style={styles.card}>\n    //             <Text style={styles.heading}>{isLogin ? 'Unichef Login' : 'Unichef Signup'}</Text>\n    //             <View style={styles.form}>\n    //                 <View style={styles.inputs}>\n    //                     <TextInput style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" onChangeText={setEmail}></TextInput>\n    //                     {!isLogin && <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName}></TextInput>}\n    //                     <TextInput secureTextEntry={true} style={styles.input} placeholder=\"Password\" onChangeText={setPassword}></TextInput>\n    //                     <Text style={[styles.message, {color: isError ? 'red' : 'green'}]}>{message ? getMessage() : null}</Text>\n    //                     <TouchableOpacity style={styles.button} onPress={onSubmitHandler}>\n    //                         <Text style={styles.buttonText}>Done</Text>\n    //                     </TouchableOpacity>\n    //                     <TouchableOpacity style={styles.buttonAlt} onPress={onChangeHandler}>\n    //                         <Text style={styles.buttonAltText}>{isLogin ? 'Sign Up' : 'Log In'}</Text>\n    //                     </TouchableOpacity>\n    //                 </View>    \n    //             </View>\n    //         </View>\n    //     </ImageBackground>\n    // );\n\n\n    return (\n        <ImageBackground source={{uri: 'https://wallpapercave.com/wp/wp8279629.jpg',}} style={styles.image}>\n            <View style={styles.card}>\n                <Text style={styles.heading}>{isLogin ? 'Unichef Login' : 'Unichef Signup'}</Text>\n                <View style={styles.form}>\n                    <View style={styles.inputs}>\n                        <TextInput style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" onChangeText={setEmail}></TextInput>\n                        {!isLogin && <TextInput style={styles.input} placeholder=\"Name\" onChangeText={setName}></TextInput>}\n                        <TextInput secureTextEntry={true} style={styles.input} placeholder=\"Password\" onChangeText={setPassword}></TextInput>\n                        <Text style={[styles.message, {color: isError ? 'red' : 'green'}]}>{message ? getMessage() : null}</Text>\n                        <TouchableOpacity style={styles.button} onPress={onSubmitHandler}>\n                            <Text style={styles.buttonText}>Forgot Password</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.buttonAlt} onPress={    onChangeHandler\n\n    }>\n               {/* <SafeAreaProvider>\n         <Navigation colorScheme={colorScheme} />\n         <StatusBar />\n      </SafeAreaProvider> */}\n                            <Text style={styles.buttonAltText}>{isLogin ? 'Log In' : 'Sign Up'}</Text>\n                        </TouchableOpacity>\n                    </View>    \n                </View>\n            </View>\n        </ImageBackground>\n    );\n};\n\nconst styles = StyleSheet.create({\n    image: {\n        flex: 1,\n        width: '100%',\n        height: '100%',\n        alignItems: 'center',\n    },  \n    card: {\n        flex: 1,\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        width: '80%',\n        marginTop: '5%',\n        marginBottom: '20%',\n        borderRadius: 20,\n        maxHeight: 500,\n        paddingBottom: '10%',\n    },\n    heading: {\n        fontSize: 30,\n        fontWeight: 'bold',\n        marginLeft: '10%',\n        marginTop: '5%',\n        marginBottom: '30%',\n        color: 'black',\n    },\n    form: {\n        flex: 1,\n        justifyContent: 'space-between',\n        paddingBottom: '5%',\n    },\n    inputs: {\n        width: '100%',\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingTop: '10%',\n    },  \n    input: {\n        width: '80%',\n        borderBottomWidth: 1,\n        borderBottomColor: 'black',\n        paddingTop: 10,\n        fontSize: 16, \n        minHeight: 40,\n    },\n    button: {\n        width: '80%',\n        backgroundColor: 'black',\n        height: 40,\n        borderRadius: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 5,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 16,\n        fontWeight: '400'\n    },\n    buttonAlt: {\n        width: '80%',\n        borderWidth: 1,\n        height: 40,\n        borderRadius: 50,\n        borderColor: 'black',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 5,\n    },\n    buttonAltText: {\n        color: 'black',\n        fontSize: 16,\n        fontWeight: '400',\n    },\n    message: {\n        fontSize: 16,\n        marginVertical: '5%',\n    },\n});\n\nexport default AuthScreen;"]},"metadata":{},"sourceType":"module"}